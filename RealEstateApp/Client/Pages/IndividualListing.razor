@page "/listing/{id:int}"

@using RealEstateApp.Shared.Models
@inject Client.Services.ListingApiService ListingApiService
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components

<PageTitle>Listing</PageTitle>
<div class="topbar">
    <span class="brand">RealeCOM</span>
    <nav>
        <a href="/">Home page</a>
        <a href="/upload">Upload a listing</a>
    </nav>
</div>


@if (isLoading)
{
    <p>Loading listing...</p>
}
else if (!string.IsNullOrEmpty(loadError))
{
    <p class="text-danger">@loadError</p>
}
else if (listing == null)
{
    <p>Listing not found</p>
}
else 
{
    <div class="breadcrumbs">
        Home > @listing.Country > @listing.City > @listing.District > @listing.Address
    </div>

    <div class="listing-container">
        <!-- LEFT COLUMN -->
        <div class="listing-main">
            <img src="https://via.placeholder.com/800x400" alt="Property image" class="listing-image" />

            <h2>@listing.Type in @listing.Address</h2>
            <h3 class="price">@listing.Price.ToString("C")</h3>

            <div class="details-grid">
                <p><strong>Area:</strong> @listing.Area mÂ²</p>
                <p><strong>Bedrooms:</strong> @listing.Bedrooms</p>
                <p><strong>Bathrooms:</strong> @listing.Bathrooms</p>
                <p><strong>Year Built:</strong> @listing.YearBuilt</p>
                <p><strong>Heating:</strong> @listing.HeatingType</p>
                <p><strong>Zip Code:</strong> @listing.ZipCode</p>
            </div>

            <h4>Description</h4>
            <p>@listing.Description</p>
        </div>

        <!-- RIGHT COLUMN -->
        <div class="listing-sidebar">
            <h4>Seller Information</h4>
            <p><strong>@listing.NameLastName</strong></p>
            <p><strong>Phone:</strong> @listing.PhoneNumber</p>
            <p><em>Listed on: @listing.DateListed.ToShortDateString()</em></p>
        </div>
    </div>
}


@code
{
    [Parameter] public int id {get; set;}

    private Listing? listing;
    private bool isLoading;
    private string? loadError;

    protected override async Task OnParametersSetAsync()
    {
        isLoading = true;
        try
        {
            listing = await ListingApiService.GetListingByIdAsync(id);
        }
                catch (Exception ex)
        {
            loadError = ex.Message;
        }
        finally
        {
            isLoading = false;
        }
    }
}